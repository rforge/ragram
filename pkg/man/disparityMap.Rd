% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disparityMap.r
\name{disparityMap}
\alias{disparityMap}
\title{Calculated disparity map between two SAR records}
\usage{
disparityMap(master, slave, window.size = 3, search.area.size = 7,
  search.area.shift = c(0, 0), resample.slave = T, window.moving.step = 1,
  run.parallel = F, cores = 4, log = F, log.file = "dispMapLog.txt",
  ...)
}
\arguments{
\item{master}{Object of the \code{\link{SAR-class}} or a subclass (e.g. \code{\link{Sentinel-class}} or \code{\link{TSX-class}}).}

\item{slave}{Object of the \code{\link{SAR-class}} or a subclass (e.g. \code{\link{Sentinel-class}} or \code{\link{TSX-class}}).}

\item{window.size}{Integer or vector of integers. Edge Length of quadratic window(s) to calculate \code{\link{zncc}}.
Correlation coefficients are multiplied if a vector is provided.}

\item{search.area.size}{Integer. Edge Length of quadratic search area in slave image.}

\item{search.area.shift}{Numeric vector. Pixels in x and y direction that the search area should be shifted.
That is how a priori knowledge about disparity can be regarded.}

\item{resample.slave}{Logical. Should the slave image be resampled to the aggregated master image?}

\item{run.parallel}{Logical. Run algorithm on more than one cores?}

\item{cores}{Integer. How many cores should be allocated?}

\item{log}{Logical. Log output to text file?}

\item{log.file}{Character. Log file address and name.}
}
\value{
Four dimensional array. The first and second dimension give rows and columns, respectively. 
The third and forth dimension gives disparities in x and y direction. The disparity is measured in pixel.
}
\description{
Calculates a disparity map between two SAR records using window based 
zero normalized cross correlation (ZNCC).
}
\examples{
data(kili)

master <- aggregate(master, 5)

disp.map <- disparityMap(master, slave, window.size=11, search.area.size=25)

disp.map.lon <- raster(disp.map[,,1])
extent(disp.map.lon) <- extent(master)
plot(disp.map.lon)

disp.map.lat <- raster(disp.map[,,2])
extent(disp.map.lat) <- extent(master)
plot(disp.map.lat)

disp.map.diagonal <- disp.map.lon
values(disp.map.diagonal) <- sqrt(disp.map.lat[]^2 + disp.map.lon[]^2)
plot(disp.map.diagonal)

# to run parallel register cores first, e.g.:
# library(doMC)
# registerDoMC(4)
}
\seealso{
\code{\link{zncc}}
}

