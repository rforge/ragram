% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotAngles.r
\docType{methods}
\name{plotAngles}
\alias{plotAngles}
\alias{plotAngles,SAR-method}
\alias{plotAngles,SARSet-method}
\alias{plotAngles,SpatialPointsDataFrame-method}
\title{Plot angles}
\usage{
plotAngles(object, z = "thetaIn", xlab = "Longitude", ylab = "Latitude",
  breaks = 255, col.regions = colorRampPalette(colors)(breaks), cex = 1,
  cex.axis = 1, grid = T, plot.legend = T, pch = 20,
  legend.lab = expression(paste(theta[i], " [deg]")), variogram.fit = T,
  plot.fit = F, interpolate = F, aggregate.fact = 100, ...)

\S4method{plotAngles}{SpatialPointsDataFrame}(object, z, xlab, ylab, breaks,
  col.regions, cex, cex.axis, grid, plot.legend, pch, legend.lab, variogram.fit,
  plot.fit, interpolate, aggregate.fact, xlim = object@bbox[1, ],
  ylim = object@bbox[2, ], asp = 1/cos((mean(range(ylim)) * pi)/180),
  zlim = c(min(object@data[, z]), max(object@data[, z])), ...)

\S4method{plotAngles}{SAR}(object, z, xlab, ylab, breaks, col.regions, cex,
  cex.axis, grid, plot.legend, pch, legend.lab, variogram.fit, plot.fit,
  interpolate, aggregate.fact, xlim = c(object@extent@xmin,
  object@extent@xmax), ylim = c(object@extent@ymin, object@extent@ymax),
  asp = 1/cos((mean(range(ylim)) * pi)/180), zlim = c(min(my.angles@data[,
  z]), max(my.angles@data[, z])), ...)

\S4method{plotAngles}{SARSet}(object, z = "thetaIn", xlab = "Longitude",
  ylab = "Latitude", breaks = 255,
  col.regions = colorRampPalette(colors)(breaks), cex = 1, cex.axis = 1,
  grid = T, plot.legend = T, pch = 20,
  legend.lab = expression(paste(theta[i], " [deg]")), variogram.fit = T,
  plot.fit = F, interpolate = F, aggregate.fact = 100, ...)
}
\arguments{
\item{object}{object of the \code{\link{SAR-class}} or a subclass (e.g. \code{\link{Sentinel-class}} or \code{\link{TSX-class}}).}

\item{z}{Character. Either incidence ('thetaIn', default) or elevation angles 'thetaEl'.}

\item{xlab}{Character. Title of the x axis.}

\item{ylab}{Character. Title of the y axis.}

\item{breaks}{Integer. Number of breaks of the color ramp.}

\item{col.regions}{Color ramp.}

\item{cex}{Numeric. Size of label text.}

\item{cex.axis}{Numeric. Size of axes.}

\item{grid}{Logical. Plot a grid?}

\item{plot.legend}{Logical. Plot the legend?}

\item{pch}{Integer. Point type.}

\item{legend.lab}{Character. Title of the legend.}

\item{variogram.fit}{Logical. Fit a Gaussian variogram?}

\item{plot.fit}{Logical. Plot the fitted variogram?}

\item{interpolate}{Logical. Interpolate angles?}

\item{aggregate.fact}{Integer. Aggregation factor expressed as number of cells in each direction (horizontally and vertically). 
Or two integers (horizontal and vertical aggregation factor) or three integers (when also aggregating over layers). 
See \code{\link{aggregate}} method of raster package.}

\item{...}{graphical parameters. Any argument that can be passed to plot, such as axes=FALSE and main='title'.}

\item{xlim}{Numeric vector of length 2, giving the x coordinate range.}

\item{ylim}{Numeric vector of length 2, giving the y coordinate range.}

\item{asp}{Numeric vector. Aspect, default is 1/cos((mean(range(ylim)) * pi)/180).}

\item{zlim}{Numeric vector of length 2, giving the z coordinate range. Range of values that are plotted.}
}
\description{
Plots the angles provided by GCPs/TPs as points.
}
\examples{
data(kili)

angles(kili[[1]])
plotAngles(kili[[1]])
plotAngles(kili[[5]])

plot(angles(kili[[1]]))
spplot(angles(kili[[1]]))

plotAngles(master, interpolate = TRUE, aggregate.fact=100)

angles.sp <- angles(master, interpolate = TRUE, aggregate.fact=10)
angles.raster <- rasterFromXYZ(angles.sp)
}
\seealso{
\code{\link{angles}}, \code{\link{GeolocationPoints-class}}
}

