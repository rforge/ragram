% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anglesKriging.r
\docType{methods}
\name{anglesKriging}
\alias{anglesKriging}
\title{Spatial interpolation of angles using kriging}
\usage{
anglesKriging(object, slave, z = "thetaIn", formula = as.formula(paste(z,
  "~ lon + lat")), variogram.fit = T, plot.fit = F, ...)

\S4method{anglesKriging}{GeolocationPoints,SpatialPoints}(object, slave,
  z = "thetaIn", formula = as.formula(paste(z, "~ lon + lat")),
  variogram.fit = T, plot.fit = F, ...)

\S4method{anglesKriging}{SAR,SAR}(object, slave, z = "thetaIn",
  formula = as.formula(paste(z, "~ lon + lat")), variogram.fit = T,
  plot.fit = F, ...)

\S4method{anglesKriging}{SAR,SpatialPoints}(object, slave, z = "thetaIn",
  formula = as.formula(paste(z, "~ lon + lat")), variogram.fit = T,
  plot.fit = F, ...)

\S4method{anglesKriging}{SpatialPointsDataFrame,SAR}(object, slave,
  z = "thetaIn", formula = as.formula(paste(z, "~ lon + lat")),
  variogram.fit = T, plot.fit = F, ...)
}
\arguments{
\item{object}{Object of class \code{\link{SpatialPointsDataFrame}}.}

\item{z}{Character. Either incidence ('thetaIn', default) or elevation angles 'thetaEl'.}

\item{formula}{Formula used for kriging (see \code{\link{krige}} of gstat package).}

\item{variogram.fit}{Logical. Fit a Gaussian variogram?}

\item{plot.fit}{Logical. Plot the fitted variogram?}

\item{spatialPoints}{Object of \code{\link{SpatialPoints}} class.}
}
\description{
Angles provided by GCPs/TPs are known.
Returns interpolated angles as a \code{\link{SpatialPointsDataFrame}} object.
}
\examples{
data(kili)
anglesKriging(master@geolocationPoints, slave@geolocationPoints)
}
\seealso{
\code{\link{angles}}, \code{\link{anglesDif}}, \code{\link{plotAngles}}, \code{\link{GeolocationPoints-class}}
}

